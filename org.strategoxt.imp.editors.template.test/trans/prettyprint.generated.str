module prettyprint.generated
imports
  libstratego-lib

strategies

  pp-option(s) = \None() -> ""\ + \Some(t) -> <s> t\
  pp-list(s|t) = map(s); separate-by(|t); concat-strings
  pp-list(s)   = map(s); concat-strings

  // ih = indent helper, t = indent string (including "\n")
  pp-ih(|t) = "" <+ string-replace(|"\n", t); <conc-strings> (t, <id>)
  pp-blank  = "" <+ <conc-strings> ("\n", <id>)

strategies // TemplateTest

  prettyprint-Start:
    Module(ID77, Definition13) -> t
    with
      ID77' := <prettyprint-ID> ID77;
      Definition13' := <pp-list(prettyprint-Definition|"\n\n")> Definition13;
      t := <concat-strings> ["module ", ID77', "\n", <pp-blank> Definition13']
  
  prettyprint-Definition:
    Entity(ID76, Property13) -> t
    with
      ID76' := <prettyprint-ID> ID76;
      Property13' := <pp-list(prettyprint-Property|"\n")> Property13;
      t := <concat-strings> ["entity ", ID76', " {", <pp-ih(|"\n  ")> Property13', "\n}"]
  
  prettyprint-Property:
    Property(ID75, Type13) -> t
    with
      ID75' := <prettyprint-ID> ID75;
      Type13' := <prettyprint-Type> Type13;
      t := <concat-strings> [ID75', " : ", Type13']
  
  prettyprint-Type:
    Type(ID74) -> t
    with
      ID74' := <prettyprint-ID> ID74;
      t := <concat-strings> [ID74']

strategies // Common

  

strategies // Layout

  

strategies // all other sorts used in placeholders

  prettyprint-ID = is-string