module emf/map

imports
	include/SDF
	trans/emf/namespaces
	lib/namespacelib
	trans/emf/projections

strategies
	map-all: 
		term -> term
		where
			//<enable-namespace-debugging> "";
			term' := <collect-om(?context-free-syntax(_))> term;
			<alltd(sort)> term';
			<alltd(namespacedef)> term';
			<alltd(constructor)> term'
	
rules
		
	sort:
		p@prod(_, sort(x), _) -> p
		where 
			<store-declaration(|Sort())> (x, p)
			
	namespacedef:
		p@prod(lhs, _, _) -> p
		where
			namespacedef := <get-namespacedef> p; // here we assume (for now) that one production has at most one namespacedef
			<store-declaration(|Namespacedef())> (namespacedef, p)
			
	constructor:
		p@prod(_, _, attrs(attributes)) -> p
		where
			<fetch(?Constructor(constructor))> attributes;
			<store-declaration(|Constructor())> (<un-double-quote> constructor, p)
	
	
	