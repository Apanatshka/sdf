module sdf

imports
  libstratego-lib
  libstratego-sdf
  libstratego-sglr
  libstrc

rules

  // TODO: Report actual SDF errors
  // TODO: Warn for A ( "," A )* instead of { A "," }*  

  editor-analyze:
    (ast, path, project-path) -> ([], warnings, [])
    with
      warnings := <collect(?context-free-syntax(<filter(context-free-syntax-warning)>))> ast
  
  context-free-syntax-warning:
    prod(p, s, a*) -> (target, $[Missing {cons("Label")} attribute to label the abstract syntax])
    where
      not(<collect(?sort(_))> p => [_])
    ; if !a* => attrs(a'*) then
        not(<one(term(default(appl(unquoted("cons"), [id]))))> a'*)
      ; not(<one(term(default(appl(unquoted("bracket" + "reject"), []))))> a'*)
      ; not(<one(reject())> a'*)
      ; not(!s => sort("Keyword")) 
      ; target := a*
      else
        target := s
      end

rules

  generate-pp-rules:
    (selected, position, ast, path, project-path) -> (filename, result)
    where
      filename  := <guarantee-extension(|"pp")> path;
      selected' := <add-context; sdf-desugar> selected;
      result    := <ppgenerate; pp-pp-table> selected'
    <+
      fatal-err(|$[Could not generate pretty printer rules for this selection.
                   Only productions with {cons()} attributes are supported.])
  
  generate-rtg:
    (selected, position, ast, path, project-path) -> (filename, result)
    where
      filename  := <guarantee-extension(|"rtg")> path;
      selected' := <add-context; sdf-desugar> selected;
      result    := <core-rtg2sig; pp-stratego-string> selected'
    <+
      fatal-err(|$[Could not generate abstract syntax signatures for this selection.
                   Only productions with {cons()} attributes are supported.])
  
  generate-aterm:
    (selected, position, ast, path, project-path) -> (filename, selected)
    where
      filename  := <guarantee-extension(|"aterm")> path
  
  add-context =
    if not(oncetd(?context-free-syntax(_))) then
      if is-list then
        !context-free-syntax(<id>)
      else
        !context-free-syntax([<id>])
      end
    end

rules // External tools not included in the standard libraries

  ppgenerate =
    <call> ("org.strategoxt.tools.ppgenerate", [<id>])

  core-rtg2sig =
    <call> ("org.strategoxt.tools.core-rtg2sig", [<id>])

  pp-pp-table =
    <call> ("org.strategoxt.tools.pp-pp-table", [<id>])
  
  sdf-desugar =
    <call> ("org.strategoxt.tools.sdf-desugar", [<id>])
