module Vernacular.pp.generated

imports 
  libstratego-gpp
  lib/runtime/tmpl/-

imports
  coq-semantics/Coq
  coq-semantics/Lexical.pp.generated
  coq-semantics/Gallina.pp.generated

strategies
  prettyprint-AssumptionKeyword =
    ![S(<is-string>)]

  prettyprint-AssertionKeyword =
    ![S(<is-string>)]

  prettyprint-example =
    prettyprint-AssumptionKeyword

  prettyprint-example =
    prettyprint-AssertionKeyword


strategies
  prettyprint-CoqFile :
    Sent(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a2681]
                 )
               ]
    where a2681 := <pp-V-list(prettyprint-Sentence|"1")> a

  prettyprint-Sentence :
    Assumption(a) -> [ H(
                         [SOpt(HS(), "0")]
                       , [a2682]
                       )
                     ]
    where a2682 := <pp-one-Z(prettyprint-Assumption)> a

  prettyprint-Sentence :
    Definition(a) -> [ H(
                         [SOpt(HS(), "0")]
                       , [a2683]
                       )
                     ]
    where a2683 := <pp-one-Z(prettyprint-Definition)> a

  prettyprint-Sentence :
    Inductive(a) -> [ H(
                        [SOpt(HS(), "0")]
                      , [a2684]
                      )
                    ]
    where a2684 := <pp-one-Z(prettyprint-Inductive)> a

  prettyprint-Sentence :
    Fixpoint(a) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a2685]
                     )
                   ]
    where a2685 := <pp-one-Z(prettyprint-Fixpoint)> a

  prettyprint-Sentence :
    AssertionProof(a, b) -> [ H(
                                [SOpt(HS(), "0")]
                              , [a2686, S(" "), b1362]
                              )
                            ]
    where a2686 := <pp-one-Z(prettyprint-Assertion)> a
    where b1362 := <pp-one-Z(prettyprint-Proof)> b

  prettyprint-Assumption :
    Assuption(a, b) -> [ H(
                           [SOpt(HS(), "0")]
                         , [ a2687
                           , S(" ")
                           , b1363
                           , S(".")
                           ]
                         )
                       ]
    where a2687 := <pp-one-Z(prettyprint-AssumptionKeyword)> a
    where b1363 := <pp-one-Z(prettyprint-Assums)> b

  prettyprint-Assums :
    Term(a, b) -> [ H(
                      [SOpt(HS(), "0")]
                    , [a2688, S(" : "), b1364]
                    )
                  ]
    where a2688 := <pp-H-list(prettyprint-Ident)> a
    where b1364 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Assums :
    Terms(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a2689]
                  )
                ]
    where a2689 := <pp-H-list(prettyprint-AssumsPar)> a

  prettyprint-AssumsPar :
    Pars(a, b) -> [ H(
                      [SOpt(HS(), "0")]
                    , [ S("(")
                      , a2690
                      , S(" : ")
                      , b1365
                      , S(")")
                      ]
                    )
                  ]
    where a2690 := <pp-H-list(prettyprint-Ident)> a
    where b1365 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Definition :
    Def(a, b, c, d) -> [ H(
                           [SOpt(HS(), "0")]
                         , [ S("Definition ")
                           , a2691
                           , S(" ")
                           , b1366
                           , S(" ")
                           , c525
                           , S(" :=")
                           ]
                         )
                       , H(
                           [SOpt(HS(), "0")]
                         , [d285]
                         )
                       , H(
                           [SOpt(HS(), "0")]
                         , [S(".")]
                         )
                       ]
    where a2691 := <pp-one-Z(prettyprint-Ident)> a
    where b1366 := <pp-H-list(prettyprint-Binder)> b
    where c525 := <pp-one-Z(prettyprint-OptType)> c
    where d285 := <pp-one-Z(prettyprint-Term)> d

  prettyprint-Definition :
    Let(a, b, c, d) -> [ H(
                           [SOpt(HS(), "0")]
                         , [ S("Let ")
                           , a2692
                           , S(" ")
                           , b1367
                           , S(" ")
                           , c526
                           , S(" :=")
                           ]
                         )
                       , H(
                           [SOpt(HS(), "0")]
                         , [d286, S(".")]
                         )
                       ]
    where a2692 := <pp-one-Z(prettyprint-Ident)> a
    where b1367 := <pp-H-list(prettyprint-Binder)> b
    where c526 := <pp-one-Z(prettyprint-OptType)> c
    where d286 := <pp-one-Z(prettyprint-Term)> d

  prettyprint-Inductive :
    Ind(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [S("Inductive "), a2693, S(".")]
                )
              ]
    where a2693 := <pp-H-list(prettyprint-IndBody|"with ")> a

  prettyprint-Inductive :
    CoInd(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("CoInductive "), a2694, S(".")]
                  )
                ]
    where a2694 := <pp-H-list(prettyprint-IndBody|"with ")> a

  prettyprint-ConsDecl :
    ConsDecl(a, b, c) -> [ H(
                             [SOpt(HS(), "0")]
                           , [ a2695
                             , S(" ")
                             , b1368
                             , S(" ")
                             , c527
                             ]
                           )
                         , H(
                             []
                           , [S("")]
                           )
                         ]
    where a2695 := <pp-one-Z(prettyprint-Ident)> a
    where b1368 := <pp-H-list(prettyprint-Binder)> b
    where c527 := <pp-one-Z(prettyprint-OptType)> c

  prettyprint-ConsDecls :
    ListDeclBar(a) -> [ H(
                          [SOpt(HS(), "0")]
                        , [S("| "), a2696]
                        )
                      ]
    where a2696 := <pp-H-list(prettyprint-ConsDecl|"| ")> a

  prettyprint-ConsDecls :
    ListDecl(a) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a2697]
                     )
                   ]
    where a2697 := <pp-H-list(prettyprint-ConsDecl|"| ")> a

  prettyprint-IndBody :
    Induc(a, b, c, d) -> [ H(
                             [SOpt(HS(), "0")]
                           , [ a2698
                             , S(" ")
                             , b1369
                             , S(" ")
                             , c528
                             , S(" :=")
                             ]
                           )
                         , H(
                             [SOpt(HS(), "0")]
                           , [d287]
                           )
                         ]
    where a2698 := <pp-one-Z(prettyprint-Ident)> a
    where b1369 := <pp-H-list(prettyprint-Binder)> b
    where c528 := <pp-one-Z(prettyprint-OptType)> c
    where d287 := <pp-one-Z(prettyprint-ConsDecls)> d

  prettyprint-Fixpoint :
    Fixpoint(a) -> [ H(
                       [SOpt(HS(), "0")]
                     , [S("Fixpoint")]
                     )
                   , a2699
                   ]
    where a2699 := <pp-indent(|"2")> [ <pp-V-list(prettyprint-FixBody|"0", " with")> a
                                     , S(".")
                                     ]

  prettyprint-Fixpoint :
    CoFixpoint(a) -> [ H(
                         [SOpt(HS(), "0")]
                       , [S("CoFixpoint")]
                       )
                     , a2700
                     ]
    where a2700 := <pp-indent(|"2")> [ <pp-V-list(prettyprint-CoFixBody|"0", " with")> a
                                     , S(".")
                                     ]

  prettyprint-Assertion :
    Assertion(a, b, c, d) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [ a2701
                                 , S(" ")
                                 , b1370
                                 , S(" ")
                                 , c529
                                 , S(" : ")
                                 , d288
                                 , S(".")
                                 ]
                               )
                             ]
    where a2701 := <pp-one-Z(prettyprint-AssertionKeyword)> a
    where b1370 := <pp-one-Z(prettyprint-Ident)> b
    where c529 := <pp-H-list(prettyprint-Binder)> c
    where d288 := <pp-one-Z(prettyprint-Term)> d

  prettyprint-Proof :
    Admitted() -> [ H(
                      [SOpt(HS(), "0")]
                    , [S("Proof. Admitted.")]
                    )
                  ]

  prettyprint-example =
    prettyprint-CoqFile

  prettyprint-example =
    prettyprint-Sentence

  prettyprint-example =
    prettyprint-Assumption

  prettyprint-example =
    prettyprint-Assums

  prettyprint-example =
    prettyprint-AssumsPar

  prettyprint-example =
    prettyprint-Definition

  prettyprint-example =
    prettyprint-Inductive

  prettyprint-example =
    prettyprint-ConsDecl

  prettyprint-example =
    prettyprint-ConsDecls

  prettyprint-example =
    prettyprint-IndBody

  prettyprint-example =
    prettyprint-Fixpoint

  prettyprint-example =
    prettyprint-Assertion

  prettyprint-example =
    prettyprint-Proof